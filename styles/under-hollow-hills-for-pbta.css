
/** Define variables for colours etc. */
choose {
  --winter: #0033cc;
  --summer: #ff9900;
  --toggle-color: #ffffff;
  --transition-duration: 0.25s; /* If updating this duration, also need to update the setTimeout pause in imagery.js#display */
  --toggle-size: 1.3em;
}

/** Render the main container - using a label makes the whole thing clickable */
choose label {
  display: flex; align-items: center; column-gap: 1.2em; font-weight: normal !important;

  span:first-child { text-align: right; }
  /** Unset default Foundry settings */
  input[type=checkbox] { margin-right: 0 !important; margin-left: 0 !important; border: none !important; }
}

/** Highlight first or second option, depending on the checkbox state, without using bold so the text doesn't change size */
choose {
  color: #666;
  span:has(+ input:not(:checked)), input:checked + span { color: #000; -webkit-text-stroke-width: 0.4px; }
  span { flex: 1; }
}

/** Change the checkbox into a toggle */
choose {
  /** Hide the normal checkbox display */
  input[type=checkbox] { appearance: none; position: relative; border: 0; outline: 0; cursor: pointer; flex: 0 0 calc(var(--toggle-size)*2); }

  /** Style the background of the toggle */
  input[type=checkbox]:after { content: ''; display: inline-block; width: calc(var(--toggle-size) * 2); height: var(--toggle-size);  border-radius: calc(var(--toggle-size) / 2); }

  /** Display the toggle blob */
  input[type=checkbox]:before { content: ''; width: var(--toggle-size); height: var(--toggle-size); position: absolute; top: 0; border-radius: 50%; background: var(--toggle-color); }

  /** Move the toggle across when selected */
  input[type=checkbox]:before { left: 0; box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); }
  input[type=checkbox]:checked:before { left: var(--toggle-size); box-shadow: -1px 1px 2px rgba(0, 0, 0, 0.5); }
  /** and change its colour */
  input[type=checkbox]:after { background: var(--summer); }
  input[type=checkbox]:checked:after { background: var(--winter);}

  /** Transition the changes gradually when the toggle changes */
  *, *:before, *:after { transition: ease var(--transition-duration), background-color var(--transition-duration) linear; }
}

